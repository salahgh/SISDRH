query allUsersPaged($pageable : PaginationInput){
    allUsersPaged(pageable: $pageable){
        content {
            id ,
            personnel {
                matricule,
                noma,
                pnoma
                nom
                pnom
            }
        }
        totalElements
    }
}
query findAllRoles{
    findAllRoles {
        id
        name
        description

    }
}
query findPersonnelsByRoleId($roleId : String){
    findPersonnelsByRoleId(roleId: $roleId){
        id
        matricule
        noma
        pnoma
        grade {
            grade
            libGradeAr
        }
        arme {
            id
        }
    }
}
query findPrivilegesByRoleId($roleId: String){
    findPrivilegesByRoleId(roleId: $roleId){
        id
        name
        description
        application {
            id
        }
    }
}
query allPrivileges{
    allPrivileges {
        id
        name
        description
        application {
            id
        }
        roles {
            id
            name
            description
        }
    }
}
query findAllRolesPaged($paginationInput : PaginationInput){
    allRolesPaged(pageable: $paginationInput){
        totalElements
        content {
            id
            name
            description
            privileges {
                id
                name
                description
            }
        }
    }
}
query findRoleById($roleId : String){
    findRoleById(roleId: $roleId){
        id
        name
        description
        privileges {
            name
            description
            id
            application {
                id
            }
        }
    }
}
query privilegeById($privilegeById : Long){
    privilegeById(PrivilegeId: $privilegeById){
        name
        description
        id
        application {
            id
        }
    }
}
query allPrivilegesPaged ($paginationInput : PaginationInput){
    allPrivilegesPaged(pageable: $paginationInput){
        totalElements
        content{
            id
            description
            name
            application {
                id
            }
        }
    }
}
query findPrivilegesByUserName($userName : String){
    findPrivilegesByUserName(userName: $userName){
        description
        id
        name
        application {
            id
        }
    }
}
mutation createRole($role : RoleDtoInput){
    createRole(role:$role){
        id
        name
        description
    }
}
mutation deleteRole($roleId : String){
    deleteRole(roleId: $roleId)
}
query findAllRolesByUser($userName : String){
    findAllRolesByUser(userName: $userName){
        id
        name
        description
    }
}
mutation userDeleteRole($roleName : String , $userName : String){
    userDeleteRole(roleName: $roleName , userName: $userName)
}
mutation UserAddRole($userName : String , $roleName : String){
    userAddRole(userName:$userName , roleName: $roleName)
}
mutation lockAccount($userId : String){
    lockAccount(userId: $userId)
}
mutation unLockAccount($userId :String){
    unLockAccount(userId: $userId)
}
query userLocked($matricule : String){
    user(matricule: $matricule){
        id
        locked
    }
}
query findAllByApplicationId($id : String){
    findAllByApplicationId(applicationId:$id){
        id
        name
        description
    }
}
query findAllApplications{
    findAllApplications {
        id
        libAr
        libFr
    }
}
mutation UserAddPrivilege($username : String , $privilegeName : String){
    userAddPrivilege(userName: $username , privilegeName: $privilegeName)
}
mutation UserAddPrivilegeRestriction($privilegeName : String , $userName : String){
    userAddPrivilegeRestriction(privilegeName: $privilegeName , userName: $userName)
}
mutation UserDeletePrivilege($userName : String , $privilegeName : String){
    userDeletePrivilege(userName:$userName , privilegeName: $privilegeName)
}
mutation UserDeletePrivilegeRestriction($userName : String , $privilegeName : String){
    userDeletePrivilegeRestriction(userName:$userName , privilegeName: $privilegeName)
}

mutation addPrivilegeToRole($roleId : String , $privilegeId : String ){
    addPrivilegeToRole(roleId: $roleId , privilegeId: $privilegeId)
}
mutation deletePrivilegeFromRole($roleId : String , $privilegeId : String ){
    deletePrivilegeFromRole(privilegeId: $privilegeId , roleId: $roleId)
}
